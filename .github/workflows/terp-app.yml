# Description:
#   - A github workflow for building and uploading the apk and ipa
# REF:
#   1. https://reactnative.dev/docs/publishing-to-app-store
#   2. https://docs.expo.dev/distribution/app-stores/

name: Build TERP Apps

on:
  push:
    tags:
      - 'terp*.*.*'
    branches:
      - release/app
  workflow_dispatch:
    inputs:
      version:
        required: true
        default: 'v1.1.0'
        description: 'Version'
      android:
        type: boolean
        default: false
        required: false
        description: 'Build Android'
      ios:
        type: boolean
        default: false
        required: false
        description: 'Build iOS'

# Fix Resource not accessible by integration 403 error
permissions:
  contents: write
  pull-requests: write

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    if: github.event.inputs.ios == 'true' || startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: hustcer/setup-nu@v3
    - name: Checkout code
      shell: nu {0}
      run: |
        let token = "${{ secrets.ERDA_GIT_TOKEN }}"
        let branch = "${{ vars.TERP_REPO_BRANCH }}"
        let repo = $"https://git:($token)@${{ vars.TERP_REPO_URL }}"
        git clone --depth=1 --branch $branch $repo
        print (pwd)
        cd terp-app; ls | print
        $'BUILD_REF=(git rev-parse --short HEAD)(char nl)' o>> $env.GITHUB_ENV
        $"BUILD_DATE=(date now | date to-timezone Asia/Shanghai | format date '%Y/%m/%d %H:%M:%SZ')(char nl)" o>> $env.GITHUB_ENV
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install dependencies
      shell: nu {0}
      run: |
        cd terp-app; pwd | print
        npm install --ignore-scripts
        cd ios; pod install
    - name: Show Env Info
      run: npx envinfo

    - name: Install iOS certificates and provisioning profile
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        P12_PASSWORD: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_PASSWORD }}
        BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_BASE64 }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_AD_HOC_PROVISIONING_PROFILE_BASE64 }}
      run: |
        # Create temp files
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # Import certificate and provisioning profile
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Import certificate to temporary keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # Install provisioning profile to temporary keychain
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

    - name: Build iOS App
      run: |
        cd terp-app/ios
        # Disable automatic signing and device check
        defaults write com.apple.dt.Xcode IDESkipMacroValidation -bool YES

        set -o pipefail && xcodebuild -workspace *.xcworkspace -scheme "TrantorApp" \
          -configuration Release \
          DEVELOPMENT_TEAM="QNWSSM6MTS" \
          PROVISIONING_PROFILE_SPECIFIER="terp-adhoc" \
          PRODUCT_BUNDLE_IDENTIFIER="io.terminus.terp.app" \
          -archivePath build/app.xcarchive \
          archive \
          CODE_SIGN_STYLE="Manual" \
          CODE_SIGN_IDENTITY="iPhone Distribution" \
          ENABLE_BITCODE=NO \
          ONLY_ACTIVE_ARCH=NO \
          -destination 'generic/platform=iOS' \
          -allowProvisioningUpdates \
          | xcbeautify --renderer github-actions

        # Export IPA
        # "ad-hoc" is deprecated at Xcode 15.4. Use "release-testing" instead.
        echo "Start exporting IPA..."
        set -o pipefail && xcodebuild -exportArchive \
          -archivePath build/app.xcarchive \
          -exportPath build/ipa \
          -exportOptionsPlist TrantorApp/ExportOptions.plist \
          -allowProvisioningUpdates \
          | xcbeautify --renderer github-actions

        echo "Show exported IPA..."
        mv build/ipa/TrantorApp.ipa build/ipa/terp-app.ipa
        ls -la build/ipa/

    - name: Upload IPA to OSS
      uses: JohnGuan/oss-upload-action@main
      with:
        region: oss-cn-hangzhou
        bucket: terminus-new-trantor
        key-id: ${{ secrets.OSS_AK }}
        key-secret: ${{ secrets.OSS_SK }}
        endpoint: https://oss-cn-hangzhou.aliyuncs.com
        assets: |
          terp-app/ios/build/ipa/terp-app.ipa:/fe-resources/app-pod/terp-app.ipa

    - name: Publish Archive
      uses: softprops/action-gh-release@v2.1.0
      # if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        draft: true
        name: "${{ github.event.inputs.version }}"
        files: './terp-app/ios/build/ipa/terp-app.ipa'
        body: "Build from commit ${{ env.BUILD_REF }} at ${{ env.BUILD_DATE }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    if: github.event.inputs.android == 'true' || startsWith(github.ref, 'refs/tags/')
    container: reactnativecommunity/react-native-android
    steps:
    - uses: hustcer/setup-nu@v3
    - name: Checkout code
      shell: nu {0}
      run: |
        let token = "${{ secrets.ERDA_GIT_TOKEN }}"
        let branch = "${{ vars.TERP_REPO_BRANCH }}"
        let repo = $"https://git:($token)@${{ vars.TERP_REPO_URL }}"
        git clone --depth=1 --branch $branch $repo
        print (pwd)
        cd terp-app; ls | print
        $'BUILD_REF=(git rev-parse --short HEAD)(char nl)' o>> $env.GITHUB_ENV
        $"BUILD_DATE=(date now | date to-timezone Asia/Shanghai | format date '%Y/%m/%d %H:%M:%SZ')(char nl)" o>> $env.GITHUB_ENV
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Show Env Info
      run: npx envinfo
    - name: Build Android App
      shell: nu {0}
      run: |
        cd terp-app; pwd | print
        npm install --ignore-scripts
        cd android; chmod +x gradlew
        ./gradlew assembleRelease
        print 'Build Android App Success:'
        mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/terp-app.apk
        ls -la app/build/outputs/apk/release/terp-app.apk

    - name: Upload APK to OSS
      uses: JohnGuan/oss-upload-action@main
      with:
        region: oss-cn-hangzhou
        bucket: terminus-new-trantor
        key-id: ${{ secrets.OSS_AK }}
        key-secret: ${{ secrets.OSS_SK }}
        endpoint: https://oss-cn-hangzhou.aliyuncs.com
        assets: |
          terp-app/android/app/build/outputs/apk/release/terp-app.apk:/fe-resources/app-pod/terp-app.apk

    - name: Publish Archive
      uses: softprops/action-gh-release@v2.1.0
      with:
        draft: true
        name: "${{ github.event.inputs.version }}"
        files: './terp-app/android/app/build/outputs/apk/release/terp-app.apk'
        body: "Build from commit ${{ env.BUILD_REF }} at ${{ env.BUILD_DATE }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
